// <auto-generated />
using System;
using DAL.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(TodoFrenosDbContext))]
    [Migration("20240818004936_stringchanceAsistence")]
    partial class stringchanceAsistence
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DAL.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("PrimApellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegunApellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("DAL.Models.Appointment", b =>
                {
                    b.Property<long>("AppointId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("AppointId"));

                    b.Property<DateTime?>("AppointCreationDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("AppointState")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<long?>("VehicleId")
                        .HasColumnType("bigint");

                    b.HasKey("AppointId");

                    b.HasIndex("UserId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("DAL.Models.Asistence", b =>
                {
                    b.Property<long>("AsistenciaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("AsistenciaId"));

                    b.Property<long>("EmpleadoId")
                        .HasColumnType("bigint");

                    b.Property<long?>("EmployeeEmpleadoId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("HoraLlegada")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoraSalida")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoAsistencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AsistenciaId");

                    b.HasIndex("EmployeeEmpleadoId");

                    b.ToTable("Asistences");
                });

            modelBuilder.Entity("DAL.Models.CartItem", b =>
                {
                    b.Property<long>("CartItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("CartItemId"));

                    b.Property<long>("CartId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("CartItemId");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("DAL.Models.Category", b =>
                {
                    b.Property<long>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("StateCateg")
                        .HasColumnType("bit");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("DAL.Models.Deducciones", b =>
                {
                    b.Property<long>("DeduccionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("DeduccionId"));

                    b.Property<long>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("IVM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ImpuestoRenta")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("LPT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SEM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SalarioBruto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalDeduccion")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("DeduccionId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Deducciones");
                });

            modelBuilder.Entity("DAL.Models.DetallesNomina", b =>
                {
                    b.Property<int>("DetalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DetalleId"));

                    b.Property<int?>("CantidadHoras")
                        .HasColumnType("int");

                    b.Property<int?>("CantidadHorasExtra")
                        .HasColumnType("int");

                    b.Property<decimal?>("Ccss")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Diario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Hora")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("HorasExtra")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Mensual")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("NominaId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Pago")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SalarioBase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Semanal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Vales")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("DetalleId");

                    b.HasIndex("EmpleadoId");

                    b.HasIndex("NominaId");

                    b.ToTable("DetallesNominas");
                });

            modelBuilder.Entity("DAL.Models.DisabilityEmployee", b =>
                {
                    b.Property<long>("IncapacidadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IncapacidadId"));

                    b.Property<int>("DiasIncapacitado")
                        .HasColumnType("int");

                    b.Property<long>("EmpleadoId")
                        .HasColumnType("bigint");

                    b.Property<long?>("EmployeeEmpleadoId")
                        .HasColumnType("bigint");

                    b.Property<int>("Entidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.HasKey("IncapacidadId");

                    b.HasIndex("EmployeeEmpleadoId");

                    b.ToTable("DisabilityEmployees");
                });

            modelBuilder.Entity("DAL.Models.Empleado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Apellido2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cedula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Puesto")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("DAL.Models.Employee", b =>
                {
                    b.Property<long>("EmpleadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("EmpleadoId"));

                    b.Property<string>("ApellidoEmpleado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactoEmergencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstadoCivil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstadoEmpleado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaContrato")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Genero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreEmpleado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PlusesSalariales")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Puesto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("SalarioBase")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("EmpleadoId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("DAL.Models.HistoricoPlanilla", b =>
                {
                    b.Property<long>("HistoricoPlanillaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("HistoricoPlanillaId"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<long>("PlanillaEmpleadoId")
                        .HasColumnType("bigint");

                    b.HasKey("HistoricoPlanillaId");

                    b.HasIndex("PlanillaEmpleadoId");

                    b.ToTable("HistoricoPlanilla");
                });

            modelBuilder.Entity("DAL.Models.HistoryPlayroll", b =>
                {
                    b.Property<long>("HistoricoNominaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("HistoricoNominaId"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<long>("NominaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PlayrollNominaId")
                        .HasColumnType("bigint");

                    b.HasKey("HistoricoNominaId");

                    b.HasIndex("PlayrollNominaId");

                    b.ToTable("HistoryPlayrolls");
                });

            modelBuilder.Entity("DAL.Models.Nomina", b =>
                {
                    b.Property<int>("NominaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NominaId"));

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaFinaliza")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("TotalNomina")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("NominaId");

                    b.ToTable("Nominas");
                });

            modelBuilder.Entity("DAL.Models.Order", b =>
                {
                    b.Property<long>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("OrderId"));

                    b.Property<long>("CodigoOrder")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RetirementDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("OrderId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("DAL.Models.OrderDetail", b =>
                {
                    b.Property<long>("OrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("OrderDetailId"));

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("PriceWithTax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal?>("Subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderDetailId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("DAL.Models.PlanillaEmpleado", b =>
                {
                    b.Property<long>("PlanillaEmpleadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("PlanillaEmpleadoId"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("HorasExtras")
                        .HasColumnType("int");

                    b.Property<int?>("HorasTrabajadas")
                        .HasColumnType("int");

                    b.Property<int?>("Incapacidades")
                        .HasColumnType("int");

                    b.Property<long>("NominaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PlayrollNominaId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("SalarioNetoFinal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PlanillaEmpleadoId");

                    b.HasIndex("PlayrollNominaId");

                    b.ToTable("PlanillaEmpleados");
                });

            modelBuilder.Entity("DAL.Models.Playroll", b =>
                {
                    b.Property<long>("NominaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("NominaId"));

                    b.Property<long>("DeduccionId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeduccionesDeduccionId")
                        .HasColumnType("bigint");

                    b.Property<long>("EmpleadoId")
                        .HasColumnType("bigint");

                    b.Property<long?>("EmployeeEmpleadoId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("SalarioNeto")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("NominaId");

                    b.HasIndex("DeduccionesDeduccionId");

                    b.HasIndex("EmployeeEmpleadoId");

                    b.ToTable("Playrolls");
                });

            modelBuilder.Entity("DAL.Models.Product", b =>
                {
                    b.Property<long>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ProductId"));

                    b.Property<long?>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("ImageProduct")
                        .HasColumnType("varbinary(max)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("StateProdc")
                        .HasColumnType("bit");

                    b.Property<int?>("Stock")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("DAL.Models.ShoppingCart", b =>
                {
                    b.Property<long>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("CartId"));

                    b.Property<DateTime>("DateAdd")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CartId");

                    b.HasIndex("UserId");

                    b.ToTable("ShoppingCarts");
                });

            modelBuilder.Entity("DAL.Models.SupplierAppointment", b =>
                {
                    b.Property<long>("SupplierAppointId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("SupplierAppointId"));

                    b.Property<DateTime?>("AppointCreationDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("AppointState")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SupplierListId")
                        .HasColumnType("bigint");

                    b.HasKey("SupplierAppointId");

                    b.HasIndex("SupplierListId");

                    b.ToTable("SupplierAppointments");
                });

            modelBuilder.Entity("DAL.Models.SupplierList", b =>
                {
                    b.Property<long>("SupplierListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("SupplierListId"));

                    b.Property<string>("SupplierEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SupplierListId");

                    b.ToTable("SupplierLists");
                });

            modelBuilder.Entity("DAL.Models.Vacation", b =>
                {
                    b.Property<long>("VacationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("VacationId"));

                    b.Property<long>("EmpleadoId")
                        .HasColumnType("bigint");

                    b.Property<long?>("EmployeeEmpleadoId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.HasKey("VacationId");

                    b.HasIndex("EmployeeEmpleadoId");

                    b.ToTable("Vacations");
                });

            modelBuilder.Entity("DAL.Models.Vehicle", b =>
                {
                    b.Property<long>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("VehicleId"));

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CarState")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModelYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeVeh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Vin")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VehicleId");

                    b.HasIndex("UserId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("DAL.Models.VehicleInspection", b =>
                {
                    b.Property<long>("VehicleInspectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("VehicleInspectionId"));

                    b.Property<string>("Brakes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DatePerformed")
                        .HasColumnType("datetime2");

                    b.Property<string>("ElectricalSystem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Engine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InspectionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InspectorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kilometraje")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lights")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OilChange")
                        .HasColumnType("int");

                    b.Property<string>("OilChangeKilometraje")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Recommendations")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Steering")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Suspension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tires")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("VehicleId")
                        .HasColumnType("bigint");

                    b.HasKey("VehicleInspectionId");

                    b.HasIndex("VehicleId");

                    b.ToTable("VehicleInspections");
                });

            modelBuilder.Entity("DAL.Models.Appointment", b =>
                {
                    b.HasOne("DAL.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.Vehicle", null)
                        .WithMany("Appointments")
                        .HasForeignKey("VehicleId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAL.Models.Asistence", b =>
                {
                    b.HasOne("DAL.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeEmpleadoId");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("DAL.Models.CartItem", b =>
                {
                    b.HasOne("DAL.Models.ShoppingCart", "ShoppingCart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("ShoppingCart");
                });

            modelBuilder.Entity("DAL.Models.Deducciones", b =>
                {
                    b.HasOne("DAL.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("DAL.Models.DetallesNomina", b =>
                {
                    b.HasOne("DAL.Models.Empleado", "Empleado")
                        .WithMany("DetallesNominas")
                        .HasForeignKey("EmpleadoId");

                    b.HasOne("DAL.Models.Nomina", "Nomina")
                        .WithMany("DetallesNominas")
                        .HasForeignKey("NominaId");

                    b.Navigation("Empleado");

                    b.Navigation("Nomina");
                });

            modelBuilder.Entity("DAL.Models.DisabilityEmployee", b =>
                {
                    b.HasOne("DAL.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeEmpleadoId");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("DAL.Models.HistoricoPlanilla", b =>
                {
                    b.HasOne("DAL.Models.PlanillaEmpleado", "PlanillaEmpleado")
                        .WithMany()
                        .HasForeignKey("PlanillaEmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlanillaEmpleado");
                });

            modelBuilder.Entity("DAL.Models.HistoryPlayroll", b =>
                {
                    b.HasOne("DAL.Models.Playroll", "Playroll")
                        .WithMany()
                        .HasForeignKey("PlayrollNominaId");

                    b.Navigation("Playroll");
                });

            modelBuilder.Entity("DAL.Models.Order", b =>
                {
                    b.HasOne("DAL.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAL.Models.OrderDetail", b =>
                {
                    b.HasOne("DAL.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DAL.Models.PlanillaEmpleado", b =>
                {
                    b.HasOne("DAL.Models.Playroll", "Playroll")
                        .WithMany()
                        .HasForeignKey("PlayrollNominaId");

                    b.Navigation("Playroll");
                });

            modelBuilder.Entity("DAL.Models.Playroll", b =>
                {
                    b.HasOne("DAL.Models.Deducciones", "Deducciones")
                        .WithMany()
                        .HasForeignKey("DeduccionesDeduccionId");

                    b.HasOne("DAL.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeEmpleadoId");

                    b.Navigation("Deducciones");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("DAL.Models.Product", b =>
                {
                    b.HasOne("DAL.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("DAL.Models.ShoppingCart", b =>
                {
                    b.HasOne("DAL.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAL.Models.SupplierAppointment", b =>
                {
                    b.HasOne("DAL.Models.SupplierList", "SupplierList")
                        .WithMany()
                        .HasForeignKey("SupplierListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SupplierList");
                });

            modelBuilder.Entity("DAL.Models.Vacation", b =>
                {
                    b.HasOne("DAL.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeEmpleadoId");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("DAL.Models.Vehicle", b =>
                {
                    b.HasOne("DAL.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAL.Models.VehicleInspection", b =>
                {
                    b.HasOne("DAL.Models.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("DAL.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("DAL.Models.Empleado", b =>
                {
                    b.Navigation("DetallesNominas");
                });

            modelBuilder.Entity("DAL.Models.Nomina", b =>
                {
                    b.Navigation("DetallesNominas");
                });

            modelBuilder.Entity("DAL.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("DAL.Models.ShoppingCart", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("DAL.Models.Vehicle", b =>
                {
                    b.Navigation("Appointments");
                });
#pragma warning restore 612, 618
        }
    }
}
