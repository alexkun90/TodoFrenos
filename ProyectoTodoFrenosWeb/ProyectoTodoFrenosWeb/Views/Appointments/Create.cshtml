@model DAL.Models.Appointment

@{
    ViewData["Title"] = "Create";
}

<h2 class="mt-3 text-center">Solicitar Cita</h2>

<div class="container d-flex justify-content-center align-items-center mt-3 mb-5">
    <div class="card rounded-3 p-4 w-50">
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                @TempData["SuccessMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                @TempData["ErrorMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group d-none">
                <label asp-for="UserId" class="control-label">Propietario</label>
                <input asp-for="UserId" class="form-control" readonly="readonly" value="@User.FindFirstValue(ClaimTypes.NameIdentifier)" />
                <span asp-validation-for="UserId" class="text-danger"></span>
            </div>
            <div class="col-md-5">
                <label asp-for="AppointCreationDate" class="form-label">Fecha y Hora de Creación</label>
                <input asp-for="AppointCreationDate" id="appointCreationDate" class="form-control" type="datetime-local" aria-required="true" required />
                <span asp-validation-for="AppointCreationDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Reason" class="control-label">Motivo</label>
                <input asp-for="Reason" class="form-control" aria-required="true" required/>
                <span asp-validation-for="Reason" class="text-danger"></span>
            </div>
            <div class="form-group d-none">
                <label class="form-label">Estado</label>
                <input type="text" class="form-control" value="Pendiente" readonly />
            </div>
            <div class="form-group d-flex justify-content-center">
                <div class="d-flex justify-content-center align-items-center w-100">
                    <input type="submit" value="Registrar" class="btn btn-agree mx-2 equal-width" />
                    <span class="separator">|</span>
                    <a asp-action="Index" class="btn btn-inactive mx-2 equal-width">Volver a la lista</a>
                </div>
            </div>
        </form>
    </div>
</div>

<div class="modal fade" id="timeValidationModal" tabindex="-1" aria-labelledby="timeValidationModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-warning text-dark">
                <h5 class="modal-title" id="timeValidationModalLabel">
                    <i class="bi bi-exclamation-triangle-fill"></i> Hora Inválida
                </h5>
            </div>
            <div class="modal-body">
                <i class="bi bi-tools"></i> Nuestro horario de atención es de 7:30 a.m. a 5:00 p.m. Por favor, elija una hora dentro de este rango.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="bi bi-x-circle"></i> Cerrar
                </button>
            </div>
        </div>
    </div>
</div>

<style>
    .d-flex {
        display: flex;
    }

    .justify-content-center {
        justify-content: center;
    }

    .align-items-center {
        align-items: center;
    }

    .mx-2 {
        margin-left: 0.5rem;
        margin-right: 0.5rem;
        margin-top: 0.5rem;
    }

    .btn {
        text-align: center;
    }

    .equal-width {
        flex-basis: 0;
        flex-grow: 1;
        max-width: 200px;
    }

    .separator {
        margin: 0 0.5rem;
        align-self: center;
    }

    .w-100 {
        width: 100%;
    }

    .modal-header {
        background-color: #ffc107; 
        color: #212529;
    }

    .modal-body {
        font-size: 1rem;
        color: #495057;
    }

    .btn-secondary {
        background-color: #6c757d; 
        border-color: #6c757d;
    }

    .btn-secondary:hover {
        background-color: #5a6268;
        border-color: #545b62;
    }
</style>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        $('form').submit(function (event) {
            event.preventDefault();

            var form = $(this);
            $.ajax({
                type: form.attr('method'),
                url: form.attr('action'),
                data: form.serialize(),
                success: function (data) {
                    updatePendingAppointments();
                    window.location.href = '@Url.Action("Create", "Appointments")';
                },
                error: function (xhr, status, error) {
                    console.error('Form submission error:', error);
                }
            });
        });

        function updatePendingAppointments() {
            $.ajax({
                url: '@Url.Action("GetPendingAppointmentsCount", "Appointments")',
                type: 'GET',
                success: function (count) {
                    var countElement = $('#pendingAppointmentsCount');
                    if (count > 0) {
                        countElement.text(count);
                        countElement.show();
                    } else {
                        countElement.hide();
                    }
                },
                error: function (error) {
                    console.error('Error fetching pending appointments count:', error);
                }
            });
        }

        $(document).ready(function () {
            function setDateTimeLimits() {
                var today = new Date();
                today.setHours(0, 0, 0, 0);
                var minDateTimeStr = today.toISOString().slice(0, 16);
                $('#appointCreationDate').attr('min', minDateTimeStr);

                $('#appointCreationDate').removeAttr('max');

                $('#appointCreationDate').on('change', function () {
                    var selectedDate = new Date($(this).val());
                    var minTime = new Date(selectedDate);
                    minTime.setHours(7, 30, 0, 0);
                    var maxTime = new Date(selectedDate);
                    maxTime.setHours(17, 0, 0, 0);

                    if (selectedDate < minTime || selectedDate > maxTime) {
                        $('#timeValidationModal').modal('show');
                        $(this).val('');
                    }
                });
            }

            setDateTimeLimits();
        });
    </script>
}